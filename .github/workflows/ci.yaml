---
name: Home Assistant CI

on:
  push:
  pull_request_review:
  check_run:
    types: [completed]

jobs:
  lint:
    name: 🧹 Lint Repo
    runs-on: ubuntu-latest

    steps:
      - name: ⤵️ Checkout Code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: 🚀 Lint Code Base
        uses: github/super-linter@v3
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  hatest:
    name: 🧪 Test HA Config
    runs-on: ubuntu-latest
    needs: lint

    strategy:
      fail-fast: false
      matrix:
        version: ["stable", "beta", "dev"]
      max-parallel: 3

    steps:
      - name: ⤵️ Checkout Code
        uses: actions/checkout@v2

      - name: 🚀 Home Assistant Configuration Check
        uses: frenck/action-home-assistant@v1
        with:
          version: "${{ matrix.version }}"
          secrets: ./.stubs/secrets.yaml
          path: .

  esphome:
    runs-on: ubuntu-latest
    needs: lint
    steps:
      - name: ⤵️ Check out configuration from GitHub
        uses: actions/checkout@v1

      - name: 🐍 Set up Python 3.7
        uses: actions/setup-python@v1
        with:
          python-version: 3.7

      - name: 🔧 Install dependencies
        run: |
          python -m pip install --upgrade pip setuptools wheel
          pip install esphome
          pip list
          esphome version
      - name: Copy stub files into configuration folder
        run: \cp -R ./.stubs/* ./esphome/

      - name: 🚀 Run esphome on all files
        run: |
          for file in $(find ./esphome -type f -name "*.yaml" -not -name "secrets.yaml"); do esphome "${file}" config; done

  gitflow:
    name: 🌲 Gitflow
    runs-on: ubuntu-16.04
    needs: hatest

    steps:
      - uses: Logerfo/gitflow-action@0.0.4
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }} # The `GITHUB_TOKEN` secret.
          release: release # The `release` branch.
          dev: develop # The `dev` branch.
          master: main # The `master` branch.
          label: gitflow # The pull request label.
          auto-merge: true # If `true`, will try to automatically merge pull requests. Can also be set to `pull_request_review`, `check_run`, `push`, or a comma-separated combination of these values to only merge when handling the named events.
          require-merge: false # If an attempted merge fails, the action is considered to have failed.
